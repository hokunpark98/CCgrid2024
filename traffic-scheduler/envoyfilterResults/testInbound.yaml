apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: service-c-filter
  namespace: paper2
spec:
  workloadSelector:
    labels:
      app: service-c
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND  # SIDECAR_INBOUND로 변경
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
            local pod_ip = nil

            function envoy_on_request(request_handle)
              if not pod_ip then
                local handle = io.popen("hostname -i")
                pod_ip = handle:read("*a"):match("^%s*(.-)%s*$")
                handle:close()
              end

              local destination_original = request_handle:headers():get(":authority")
              local destination_domain = destination_original:match("^([^:]+)")

              -- 트래픽 수신 정보 로깅
              request_handle:logWarn("Source IP: " .. (pod_ip or "nil") .. 
                ", Destination Domain: " .. (destination_domain or "nil") .. 
                ", Destination Original: " .. (destination_original or "nil"))

            end
